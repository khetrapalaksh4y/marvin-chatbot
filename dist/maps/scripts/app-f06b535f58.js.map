{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ChatController","$timeout","initializeChat","getBotResponse","then","setLastResponseSentiment","message","messageSentiment","matchesAgainstKeywords","positiveResponses","negativeResponses","lastResponseSentiment","keywordArray","stringToMatch","itMatches","forEach","keyword","getApproximityScore","string1","string2","longer","shorter","length","longerLength","getLevenshteinEditDistance","parseFloat","longerString","shorterString","toLowerCase","costs","i","lastValue","j","newValue","charAt","Math","min","Promise","resolve","reject","vm","typing","sendMessage","getBotResponseBasedOnSequence","random","botResponse","getRandomResponse","botMessageSequence","introduction","getResponseBasedOnLastResponseSentiment","questions","randomResponses","floor","this","botAvatar","responses","messageInput","left","d","Date","m","getMinutes","push","id","document","getElementsByClassName","scrollTop","scrollHeight","date","getHours","$inject","controller","runBlock","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","controllerAs","otherwise","config","constant","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-f06b535f58.js","sourcesContent":["(function() {\n\t'use strict';\n\tangular.module('surveyChatbot', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'restangular', 'ui.router', 'ngMaterial', 'toastr']);\n})();\n\n(function() {\n\t'use strict';\n\n\tangular.module('surveyChatbot').controller('ChatController', ChatController);\n\n\t/** @ngInject */\n\tfunction ChatController($timeout) {\n\n\t\tvar vm = this;\n\t\tvar botMessageSequence = 0;\n\n\t\tvar questions = [\n\t\t\t\"How often do you eat chocolates?\",\n\t\t\t\"What kind of chocolates do you like?\",\n\t\t\t\"Would you be interested in getting a pack of chocolates every week?\"\n\t\t]\n\n\t\tvar introduction = [\n\t\t\t\"Hi, I am Marvin.\",\n\t\t\t\"I am here to ask you a few questions.\",\n\t\t\t\"Are you ready?\"\n\t\t]\n\n\t\tvar randomResponses = [\n\t\t\t\"It was fun talking to you.\",\n\t\t\t\"Okay then! Bye bye. You may go now.\",\n\t\t\t\"Don't mock me. You know I'll soon run out of responses.\",\n\t\t\t\"Why did the chicken cross the road? Don't bother, I don't have an answer.\",\n\t\t\t\"*knock *knock. Don't answer\"\n\t\t]\n\n\t\tvar positiveResponses = [\"yes\", \"yep\", \"yo\", \"yeah\", \"let's\"]\n\t\tvar negativeResponses = [\"no\", \"nah\", \"later\", \"nope\"]\n\t\tvar lastResponseSentiment = 0;\n\n\t\tvm.botAvatar = \"http://vignette2.wikia.nocookie.net/edain-mod/images/5/56/The_Necromancer0_Bot_Avatar.png/revision/latest?cb=20160321121352\";\n\t\tvm.responses = [];\n\t\tvm.messageInput = \"\";\n\n\t\tinitializeChat();\n\n\t\tvm.sendMessage = function(message, left) {\n\t\t\tvar d = new Date()\n\t\t\tvar m = d.getMinutes();\n\n\t\t\tvm.typing = left ? false : vm.typing;\n\t\t\tvm.messageInput = left ? vm.messageInput : \"\";\n\n\t\t\tvm.responses.push({\n\t\t\t\t'id': vm.responses.length,\n\t\t\t\t'left': left,\n\t\t\t\t'message': message\n\t\t\t})\n\n\t\t\tdocument.getElementsByClassName('messages')[0].scrollTop = document.getElementsByClassName('messages')[0].scrollHeight;\n\n\t\t\tif(!left)\n\t\t\t{\n\t\t\t\tsetLastResponseSentiment(message);\n\t\t\t\tif(botMessageSequence > 3)\n\t\t\t\t{\n\t\t\t\t\tgetBotResponse().then();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgetBotResponse().then(getBotResponse).then();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$timeout(function() {\n\t\t\t\tvm.responses[vm.responses.length - 1].date = d.getHours() + ':' + m;\n\t\t\t}, 5000);\n\t\t}\n\n\t\tfunction initializeChat() {\n\t\t\tgetBotResponse().then(getBotResponse).then(getBotResponse).then();\n\t\t}\n\n\t\tfunction setLastResponseSentiment(message) {\n\t\t\tvar messageSentiment = 0;\n\n\t\t\tif(matchesAgainstKeywords(positiveResponses, message))\n\t\t\t{\n\t\t\t\tmessageSentiment = 1;\n\t\t\t}\n\t\t\telse if(matchesAgainstKeywords(negativeResponses, message))\n\t\t\t{\n\t\t\t\tmessageSentiment = -1;\n\t\t\t}\n\n\t\t\tlastResponseSentiment = messageSentiment;\n\t\t}\n\n\t\tfunction matchesAgainstKeywords(keywordArray, stringToMatch) {\n\t\t\tvar itMatches = false;\n\t\t\tkeywordArray.forEach(function(keyword) {\n\t\t\t\tif(getApproximityScore(keyword, stringToMatch) > 0.7)\n\t\t\t\t{\n\t\t\t\t\titMatches = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn itMatches;\n\t\t}\n\n\t\tfunction getApproximityScore(string1, string2) {\n\t\t\tvar longer = string1;\n\t\t\tvar shorter = string2;\n\n\t\t\tif (string1.length < string2.length) {\n\t\t\t\tlonger = string2;\n\t\t\t\tshorter = string1;\n\t\t\t}\n\n\t\t\tvar longerLength = longer.length;\n\n\t\t\tif (longerLength == 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn (longerLength - getLevenshteinEditDistance(longer, shorter)) / parseFloat(longerLength);\n\t\t}\n\n\t\tfunction getLevenshteinEditDistance(longerString, shorterString) {\n\t\t\tlongerString = longerString.toLowerCase();\n\t\t\tshorterString = shorterString.toLowerCase();\n\n\t\t\tvar costs = [];\n\t\t\tfor (var i = 0; i <= longerString.length; i++) {\n\t\t\t\tvar lastValue = i;\n\t\t\t\tfor (var j = 0; j <= shorterString.length; j++) {\n\t\t\t\t\tif (i == 0){\n\t\t\t\t\t\tcosts[j] = j;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar newValue = costs[j - 1];\n\t\t\t\t\t\t\tif (longerString.charAt(i - 1) != shorterString.charAt(j - 1))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcosts[j - 1] = lastValue;\n\t\t\t\t\t\t\tlastValue = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i > 0)\n\t\t\t\t{\n\t\t\t\t\tcosts[shorterString.length] = lastValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn costs[shorterString.length];\n\t\t}\n\n\t\tfunction getBotResponse() {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tvm.typing = true;\n\t\t\t\t}, 300);\n\t\t\t\t$timeout(function(){ \n\t\t\t\t\tvm.sendMessage(getBotResponseBasedOnSequence(), true);\n\t\t\t\t\tresolve();\n\t\t\t\t}, 500 + Math.random() * 2500);\n\t\t\t})\n\t\t}\n\n\t\tfunction getBotResponseBasedOnSequence() {\n\t\t\tvar botResponse = getRandomResponse();\n\t\t\tif(botMessageSequence < 3)\n\t\t\t{\n\t\t\t\tbotResponse = introduction[botMessageSequence];\n\t\t\t}\n\t\t\telse if(botMessageSequence == 3)\n\t\t\t{\n\t\t\t\tbotResponse = getResponseBasedOnLastResponseSentiment();\n\t\t\t}\n\t\t\telse if(botMessageSequence > 3 && lastResponseSentiment > -1 && botMessageSequence < questions.length + 4)\n\t\t\t{\n\t\t\t\tbotResponse = questions[botMessageSequence - 4];\n\t\t\t}\n\n\t\t\tbotMessageSequence++;\n\n\t\t\treturn botResponse;\n\t\t}\n\n\t\tfunction getResponseBasedOnLastResponseSentiment() {\n\t\t\tif(lastResponseSentiment == -1)\n\t\t\t{\n\t\t\t\treturn \"Ah! Alright then. You can come back any time.\"\n\t\t\t}\n\t\t\telse if(lastResponseSentiment == 0)\n\t\t\t{\n\t\t\t\treturn \"I didn't exactly get that. I'll go ahead anyways.\"\n\t\t\t}\n\t\t\telse if(lastResponseSentiment == 1)\n\t\t\t{\n\t\t\t\treturn \"Great! Let's start.\"\n\t\t\t}\n\t\t}\n\n\t\tfunction getRandomResponse() {\n\t\t\treturn randomResponses[Math.floor(Math.random() * randomResponses.length)]\n\t\t}\n\t}\n})();\n(function() {\n\t'use strict';\n\n\tangular.module('surveyChatbot').run(runBlock);\n\n\t/** @ngInject */\n\tfunction runBlock() {\n\t}\n})();\n(function() {\n\t'use strict';\n\tangular.module('surveyChatbot').config(routerConfig);\n\t/** @ngInject */\n\tfunction routerConfig($stateProvider, $urlRouterProvider) {\n\t\t$stateProvider\n\t\t.state('home', {\n\t\t\turl: '/',\n\t\t\ttemplateUrl: 'app/templates/index.html',\n\t\t\tcontroller: 'IndexController',\n\t\t\tcontrollerAs: 'index'\n\t\t})\n\t\t.state('oops', {\n\t\t\turl: '/oops',\n\t\t\ttemplateUrl: 'app/templates/404.html',\n\t\t\tcontroller: 'IndexController',\n\t\t\tcontrollerAs: 'index'\n\t\t})\n\t\t.state('chat', {\n\t\t\turl: '/chat',\n\t\t\ttemplateUrl: 'app/templates/chat.html',\n\t\t\tcontroller: 'ChatController',\n\t\t\tcontrollerAs: 'chat'\n\t\t});\n\t\t$urlRouterProvider.otherwise('/oops');\n\t}\n})();\n(function() {\n\t'use strict';\n\n\tangular.module('surveyChatbot').constant('AppConstant', {\n\t\t\n\t})\n})();\n(function() {\n\t'use strict';\n\tangular.module('surveyChatbot').config(config);\n\n\t/** @ngInject */\n\tfunction config($logProvider) {\n\t\t// Enable log\n\t\t$logProvider.debugEnabled(true);\n\t}\n\n})();\nangular.module(\"surveyChatbot\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/templates/404.html\",\"\");\n$templateCache.put(\"app/templates/chat.html\",\"<div class=chat><div class=chat-title><h1>Marvin</h1><h2 ng-show=!chat.typing>online</h2><h2 ng-show=chat.typing>is typing...</h2><figure class=avatar><img ng-src={{chat.botAvatar}}></figure></div><div class=messages><div class=\\\"messages-content new\\\"><div class=\\\"message new\\\" ng-class=\\\"{\\'message-personal\\': !response.left}\\\" ng-repeat=\\\"response in chat.responses\\\"><figure class=avatar ng-show=response.left><img ng-src={{chat.botAvatar}}></figure><span>{{response.message}}</span><div class=timestamp ng-show=$last>{{response.date}}</div></div><div class=\\\"message loading\\\" ng-show=chat.typing><figure class=avatar><img ng-src={{chat.botAvatar}}></figure><span></span></div></div></div><div class=message-box><textarea type=text ng-keypress=\\\"($event.which === 13 && chat.messageInput.length && chat.responses[chat.responses.length - 1].left) ? chat.sendMessage(chat.messageInput, false) : \\'\\'\\\" class=message-input ng-model=chat.messageInput placeholder=\\\"Type your message...\\\"></textarea><button type=submit ng-disabled=\\\"chat.typing || !chat.responses[chat.responses.length - 1].left\\\" class=message-submit ng-click=\\\"chat.sendMessage(chat.messageInput, false)\\\">Send</button></div></div><div class=bg></div>\");\n$templateCache.put(\"app/templates/index.html\",\"\");}]);"],"sourceRoot":"/source/"}